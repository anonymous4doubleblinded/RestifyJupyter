codename,controlgroup,animal,javaskill,springskill,mavenskill,touchcoreskill,unixskill,restskill,singletonskill,reflectionskill,groupindex,firstapp,secondapp,firstmethodology,secondmethodology,tcinstructions,ideinstructions,xoxtime,bookstoretime,xoxverified,bsverified,tccomments,idecomments,assistedstatus,assistedsuccessrate,manualstatus,manualsuccessrate,GET/xox,POST/xox,GET/xox/id,DEL/xox/id,GET/xox/id/board,GET/xox/id/players,GET/xox/id/players/id/actions,POST/xox/id/players/id/actions/actionid,GET/bookstore/isbns,GET/bookstore/isbns/isbn,PUT/bookstore/isbns/isbn,GET/bookstore/stocklocations,GET/bookstore/stocklocations/stocklocation,GET/bookstore/stocklocations/stocklocation/isbns,POST/bookstore/stocklocations/stocklocation/isbns,GET/bookstore/isbns/isbn/comments,POST/bookstore/isbns/isbn/comments,DEL/bookstore/isbns/isbn/comments,POST/bookstore/isbns/isbn/comments/comment,DEL/bookstore/isbns/isbn/comments/comment
Red-Squid,red,squid,3,1,2,1,4,2,5,1,0,bookstore,xox,touchcore,manual,1210,2636,2713,1256,True,True,Participant replicates entire TouchCORE screencast on zoo while watching instructions. Jumps back and forth between instructions and zoo replication. This leads to high tc-instruction time measured. Participant modifies TouchCORE resolution during instruction video  which was technically supposed to be done during preliminaries. Time spent on adjusting settings was excluded from time measurement. When working on own task (BS) participant does at first remains in feature model perspective and attempts to model the BookStore REST tree as feature model. Presumably an effect of them skipping through instructions and directly scroll over textual recap to the bookstore REST interface description. Participant is fast once they notice their mistake and proceed to correct TouchCORE perspective.,The participant at first completely ignores the instruction video and proceeds directly to the provided textual summary task description. They then open their IDE before having watched any part of the instruction video. Some parts of the textual instructions exemplify required steps on the example of the zoo. The participant seems to misunderstand the task for they then begin to replicate the illustrations on the zoo. Eventually the participants begins reading over from top and notices the provided screencast. They open the screencast but do not watch the instructions to end and again directly replicates steps shown for the zoo. They replicate in great detail. This includes even steps that are only meant for troubleshooting  e.g. cache invalidation of the IDE in case of project import problems. They hardly follow the provided instructions. They enter and submit their legal name instead of the pseudonym attributed. (We later modified this in their submission to protect their privacy). The participant then jumps back and forth in seconds intervals between manual zoo restify instructions and manual task solving of the zoo. It seems they have not yet noticed that this is not the task. They forget several modifications of the pom xml inlcuding the parent tag for spring boot. When IDE does not detect pom changes they ignore the refresh popup indicated in video and instead remove and re import the entire project multiple times into their IDE. Eventually they proceed watching the video and ignore all warning and errors in IDE related to imcomplete and non refreshes pom.xml. At some point the video stalls for 10 minutes where we see no on screen activity. We assume this an AFK activity as the associated part is not relevant enough to inspect for 10 minutes and therefore excluded this time form the measurements. The participant eventually fixes the missing parent statement in pom.xml by copying solution from zoo solution branch on git rather than inspecting the file content. While working on xox they are at first stuck because the again forget to update the launcher class reference in the pom.xml file.,OK,12/12,OK,7/8,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Red-Raccoon,red,raccoon,3,3,3,1,4,4,1,1,0,bookstore,xox,touchcore,manual,959,3256,1251,2161,False,True,All good.,The participant does not finish the task. They give up after about 80 minutes. This is acceptable as the requested minimum time was one hour. They lost a lot of time by alternating between instructions and solving. Notably they do not finish the instructions before starting work on own task and then rapidly gets lost in the refactoring process. The participant uses Eclipse instead of all material referring to IntelliJ. The participant spends a lot of time on manually formatting and indenting code. The participant seems to confuse the semantic of GetMapping with getters as they start annotating all getters encountered in source code for a significant amount of time. They skip the textual step by step instructions and instead frequently alternate between video and manual task solving in chunks of only few seconds. They do not work on the actual app but replicate the steps seen for the zoo. It takes about an hour until they notice this is not the task and only the last 20 minutes they actually work on xox.,OK,10/12,OK,0/8,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL
Red-Zebra,red,zebra,3,1,2,1,4,2,3,3,0,bookstore,xox,touchcore,manual,1591,2046,1536,1167,True,True,Pariticpant replicates the entire zoo example after TouchCORE video instructions. They first struggle with maven commands. Namely with launching of JAR file. Participant is stuck in split view as they try to edit the resource tree from within the split view. While connecting lines there is an issue as existing lines overlay resources that still need mapping. Makes it hard to operate software. Restified bookstore seems to print exceptions to console. Probably not an issue for the tested behaviour is correct.,The participant first attempts to start the refactored application using the IDEs launch button. However this button is not at all associated to maven. They afterwards edit the pom.xml with fast and very targeted. This seems to be a participant with maven experience.,OK,12/12,OK,6/8,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Red-Fox,red,fox,3,2,3,1,4,2,5,4,0,bookstore,xox,touchcore,manual,2615,2745,3682,2488,True,False,Struggles with setting of JVM version for touchcore before starting task. The check was requested to be run in preliminaries. Apparently those were not fully followed. Participant replicates the full zoo example with touchcore before starting own task. Video stops before any resource mapping is tested. The participant only tests once and types an incorrect root url before giving up.,Participant begins replicating the instruction video on the zoo but ultimately never finished instructions or replications before starting to work on xox task. It follows an interleaved phase where they rapidly jumps back and forth between instruction video and task solving in very small steps of only some seconds. Participant ignores pom.xml dependencies for a long time which results in massive error wordnings in code editor as they are referring to unresolved JDK external methods. The participant ignores these errors and warnings for a long time. At some point they imitate the ResTL DSL in a text editor effectively creating an ASCII version of the visualized resource tree and CRUD methods. Only afterwards they translate it to spring annotations for existing methods. The participant has issues with the resource naming as they use a CamelCase notation rather than using slash separators when testing resource access by browser.,OK,9/12,OK,0/8,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,PASS,FAIL,PASS,PASS,PASS
Red-Unicorn,red,unicorn,4,4,2,3,4,5,1,3,0,bookstore,xox,touchcore,manual,1058,2188,2568,2088,True,True,Participant struggles with TouchCORE user interface for creation of subresources. They trying repeatedly to drag down starting on top level resource. User interface only recognizes command if line is started below existing resource. Participant needs about two minutes to succeed with resource creation. No other issues.,The participant open the google search engine while watching the task instruction videos and looks up details of the spring annotation URL syntax. Otherwise a very linear and straightforward task solving.,OK,12/12,OK,6/8,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Red-Turtle,red,turtle,2,4,3,4,4,5,5,2,0,bookstore,xox,touchcore,manual,911,1296,2794,2502,True,True,At first stuck because they attempt to model the ResTL (tree) from within the splitview (only supports mapping). Afterwards they solve the task pretty straightforward. Participant consults API doc to identify desired bookstore target methods when in doubt.,Participant does not complete screencast before starting to work on own task. After 2 minutes when stuck on manual solving they first jump back to textual instructions and after that proceeds in interleaved mode where short parts of screencast are watched  followed by working on own Xox task. They seem to have problems with spring bean container and autowiring and watch the corresponding part of the instruction video 3-4 times. They also have issues with these parts during task solving. Launching the refactored app first fails because they forgot to update the launcher class in the pom.xml file.,OK,12/12,OK,7/8,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Red-Koala,red,koala,4,2,1,5,4,5,5,4,0,bookstore,xox,touchcore,manual,1153,1690,2311,1265,True,True,Participant replicates entire Zoo example live while following TouchCORE instructions.,Participant interleaves video instructions and manual task solving of xox. The on screen recordings show agressive jumping back and forth between video instructions and manual own task solving in very small steps.,OK,12/12,OK,8/8,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Green-Squid,green,squid,3,2,2,3,3,3,2,1,1,bookstore,xox,manual,touchcore,462,3101,3260,7397,True,False,Participant barely familiarized with provided material. Starts TouchCORE before reading any instructions or watching screencast. Then opens screencast and skips first three minutes. Jumps frequently back and forth  watches only snippets of some seconds. Seems to jump randomly back and forth in video. Keeps dragging on resource  does not read instructions or watch examples that tell how to extend resource tree by dragging below box. Modifies textual description by noting text of target method in resource rather than dragging the line between REST endpoint and method. At some point even opens Xox application source code in intelliJ to inspect internals  although models and javadoc are provided. Parameters do not show correct names in model which is supposed a windows bug.,The participant heavily interleaves video instructions and task solving. They jumps back and forth in steps of just several seconds. They seem to sacrifice a lot of efficiency due this approach and never finish the task despite over two hours 30 minutes. At some point there is 3and a half minute pause in screencast without any activity. This takes place at about 1h16 in the video. Likely the participant left their computer or was following an off screen activity that we cannot reconstruct. As we cannot distinguish with the present information we counted this to regular video watch time. Participant has problems with autowiring as they attempt to access an autowired field from within the constructor. This causes problems at program startup due to beans not being correctly constructed. The participant does not use the advised postcontruct annotation to solve the issue and gives up.,OK,8/8,NR,0,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Green-Raccoon,green,raccoon,2,2,1,1,2,5,5,4,1,bookstore,xox,manual,touchcore,406,2258,3290,5069,True,True,Participant ignores preliminary instructions that request to begin with video task illustrations. Participant instead attempts to directly solve task with TouchCORE. Uses software for 20 minutes in trial and error mode. Only then goes back to watch screencast instructions. Participant does not watch screencast to then end. They only watches a few minutes and then try to commence task again without finishing screencast. They get stuck again. Participant then tries to modify ResTL model in splitview which does not allow modifications as it is only built for mapping to other models. Participant also tries to map path parameters of resources that do not contain the corresponding dynamic path parameter in resource path. As this is the second task the participant then reviews the code from their previous task for several minutes. It is not clear why as this provides no visible help for solving the task with TouchCORE. Participant tries the UNIX commands seen in instructions in a DOS prompt. Participant continues jumping back and forth between task and instructions but never finishes video instructions.,Participant first forgets to update the launcher class reference in the pom.xml file. Also the IDE first does not recognize the changes made to pom.xml as they do not manually refresh. Eventually they are able to solve both issues.,OK,7/8,OK,6/12,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL
Green-Zebra,green,zebra,2,1,2,1,5,3,4,3,1,bookstore,xox,manual,touchcore,1384,2924,2357,8615,True,True,Participant replicates parts of screencast while still watching on zoo models. Participant inspects Xox source code while mapping on parameters. Possibly because parameter names are not displayed in splitview which is known to be a windows bug.,Participant tries some maven commends for the zoo sample project while still watching the screencast. They also open the Zoo project in IntelliJ while the screencast is still running but eventually never replicate the illustrated steps in the zoo. Otherwise all good. They then follow the screencast to end una only afterwards begin solving their manual refactoring task.,OK,7/8,OK,12/12,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Green-Fox,green,fox,3,3,2,2,4,4,3,4,1,bookstore,xox,manual,touchcore,889,2154,1986,3653,True,False,Participant never finishes video instructions. Participant starts TouchCORE to replicate on zoo before screencast ends. TouchCORE crashes while modelling the ResTL model. Participant then jumps through instruction video again it seems to random points. Participant then starts working on own task and returns to video instructions when stuck.,Participant does not finish the task illustration video and skips the part about testing. They start working on pom changes but rapidly go back to video instructions. They then rapidly alternate back and forth between video illustrations and actual task. We suspect they did not record their entire activity for at the end of recording their code does not compile while the submitted code does.,OK,7/8,NR,0,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Green-Unicorn,green,unicorn,3,2,5,1,4,3,5,4,1,bookstore,xox,manual,touchcore,1145,1966,1955,7931,False,False,Opens TouchCORE only seconds after start of screencast and tries to imitate steps for zoo refactoring while watching video. Rapidly jumps back and forth between imitation and video instructions. Generates code but application is at first not runnable  because previously manual restified app is still blocking port.,The participant does not follow the requested order and interleaves task activities. They start replicating the illustrations on a copy of the zoo while the instruction video is running in the background. The then proceed to the Bookstore task and commence refactoring while the instruction video keeps running in the background. At some point there is a phase with quite hectic jumping back and forth between task solving and video instructions. The participant struggles with autowiring. They never finishes the complete video instructions and instead adds generic catch blocks in an attempt to suppress exceptions occurring at spring bean creation which ultimately stem from incorrect field autowiring.,OK,8/8,NR,0,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Green-Turtle,green,turtle,3,3,3,4,4,4,3,3,1,bookstore,xox,manual,touchcore,892,2282,2332,4010,True,True,All good.,Participant does not follow advised order. They open all three cloned projects at once in a bundles IntelliJ project significantly before having finished video instructions. While task solving they go over the IDE menus that are meant for troubleshooting although there is no need as the sources were correclty imported on the first attempt.,OK,8/8,OK,10/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,FAIL,PASS,PASS,PASS
Green-Koala,green,koala,4,2,3,5,5,4,5,4,1,bookstore,xox,manual,touchcore,902,2066,647,2651,True,True,All good except for a TouchCORE crash after successful model weaving and code generation. Not relevant to study as end of task was already reached and outcome is correctly saved.,The participant uses Eclipse despite all task material referring to IntelliJ. They run into a into bean creation error. This is because they attempt to access a parameter provided by autowired field injection in the parameter. The eventually solve it be relocating the critical part outside the constructor and using an @postconstruct annotation.,OK,8/8,OK,11/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Blue-Squid,blue,squid,4,2,3,1,3,3,5,2,2,xox,bookstore,touchcore,manual,1002,1811,2892,4205,True,True,TouchCORE crashes during task completion. Participant revises parts of instruction video again during task completion. Participant consults xox JavaDoc to resolve mapping instructions which they describe as ambiguous in the final textual evaluation.,The participant first struggles with the IDE not detecting changes to the pom.xml. Namely the dependencies added for spring are not picked up and therefore not usable in code editor. Participant has issues with usage of the PostConstruct annotation.,OK,7/8,OK,10/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,FAIL,PASS,PASS
Blue-Raccoon,blue,raccoon,3,1,2,2,4,3,5,1,2,xox,bookstore,touchcore,manual,924,1698,2757,5227,True,True,All good.,The participant returns to video instructions to revise key parts when stuck in task solving. At some point they are stuck with figuring out the usage of an @Autowired annotation and upon receiving an exception note on screen that they run out of time to figure out the issue. Nonetheless the return to the issue later and resolve it. The participant has first issues with the application start because another application instance is already running and blocking the port. They launch the command line tool netstat to identify and solve the issue.,OK,8/8,OK,11/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Blue-Zebra,blue,zebra,3,1,2,3,2,4,5,4,2,xox,bookstore,touchcore,manual,1043,1782,2276,3738,True,True,Participant interleaves video instructions with imitating zoo sample instructions. Forgets to set launcher class in pom. Stuck at refresh of pom file in IDE. That is to say correctly enters dependencies but IDE does not recognize them at first. Does not read troubleshoot section which mentions this challenge. Only adds @restcontroller toward end of task. Likely they forgot about this annotation at first. Participant severely struggles with autowiring and searches on StackOverflow rather than reading instructions or troubleshoot section. Gives up after about 90 minutes without having solved the autowiring issue.,The participant does not use IntelliJ and uses eclipse instead. They also ignore or skip all provided illustrations for IntelliJ. The participant attempts to replicate the Zoo refactoring parallel to watching instruction video. When starting the refactored REST service the windows firewall triggers a system popup which the participant dismisses. Probably they did not read the warning as they do not explicitly allow access. They then watch the screencast again at accelerated speed.,OK,8/8,OK,11/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Blue-Fox,blue,fox,2,1,2,4,5,3,5,4,2,xox,bookstore,touchcore,manual,931,2167,3602,5835,True,True,Participant watches excerpts of screencast again rather than consulting textual summary in summary.,The participant first skips the needed changes to the pom.xml file. Their refactoring approach seems very random as the seem to copies snippets of instructions code of instructions at various places in a trial and error fashion. They forget to update the restlauncher reference in the pom.xml file for a long time. Also participant does not remove tests of legacy tests for a long time. They never refresh pom xml edits in IDE meaning they have many errors in code aditor as the IDE does not recognize the added dependencies.,OK,8/8,OK,12/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Blue-Unicorn,blue,unicorn,4,3,3,2,4,4,5,2,2,xox,bookstore,touchcore,manual,917,2242,2096,3789,True,True,Participant replicated entire zoo from video instructions before starting actual refactoring task. Participant has no problems refactoring Xox. Xox task starts at 31:32 goes until end 52:39 of video recording.,Participant directly works on bookstore after having finished the video instructions. They only watch short excerpts of screencast again when stuck. Participant struggles at first when using post construction annotation.,OK,8/8,OK,9/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS
Blue-Turtle,blue,turtle,4,3,4,4,5,4,5,4,2,xox,bookstore,touchcore,manual,755,637,1825,926,False,False,Participant does not respect order presented in preliminary instructions. That is to say participant heavily interleaves viewing introduction video instructions and their own task solving. Participant watches most instruction at 2x playback speed. Participant at some point deletes half of what was already modelled in TouchCORE for no apparent reason. Possibly is confused and therefore decides to start over. Participant opens TouchCOREs split view in Vertical mode that is to say one model is on top half of screen the other model in half below. This splitview mode is never presented in instructions as it renders task solving more complicated for the required mappings are hard to read in this mode and significantly overlap. Participant creates mappings from tree resource operations to singleton getinstance method. Unsure why. Participant visibly experiences difficulties navigating TouchCORE UI. Likely because they did not watch the instructions entirely before starting task. Participant frequently opens and closes random TouchCORE menus as if in search for a specific option or exploring the software most of them not relevant for task and not presented in video instructions. RAM model does not showcase parameter names which is an effect of windows. Participant hits trafo button to weave models and generate code while having many incomplete mappings. When prompted with error message participant adds random mappings and hits button again.,Participant makes little effort to finish task. They do not watch the complete explanation screencast and interleave. That is to say they start working on task while video is still running in background. The video material does not show them going through the complete list of required changes. The video stops after launcher creation and based on the submitted source files they did not work much longer on the refactoring either.,OK,2/8,OK,0/12,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Blue-Koala,blue,koala,4,1,3,1,3,2,5,3,2,xox,bookstore,touchcore,manual,992,1925,3043,5445,True,True,TouchCORE crashes during task completion. Participant revises parts of screencast again during task completion.,Participant first forgets about modifying the launcher class reference in pom.xml file.,OK,8/8,OK,2/12,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Yellow-Squid,yellow,squid,2,1,1,1,3,4,5,4,3,xox,bookstore,manual,touchcore,763,1157,3775,2293,True,True,Participant reads through textual task description while watching screencast.,The participant reads the textual task description while the video is running in parallel in background. They also skips through vast parts of video instructions. Until the end they forget to update the launcher class reference in their pom.xml file.,OK,12/12,OK,8/8,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Yellow-Raccoon,yellow,raccoon,4,1,2,3,5,3,2,3,3,xox,bookstore,manual,touchcore,956,3207,5084,1809,True,True,Participant replicates entire zoo screencast illustrations on a copy of zoo before starting own task. Likely did not understand at first what the task was.,Participant replicated the illustrations on the zoo sample app while watching the manual refactoring screencast instructions. Not clear if they understood the instructions as they replicated even parts that had no relevance e.g. the troubleshoot part. The latter was obsolete because their project was from the start correctly imported. The participant seems to confuse annotation urls with the package structure of legacy app. For example they denote URIs that start with the xoxinternals keyword. The application first fails to start because conflicting mappings are defined. However they eventually finds the conflicting annotations and are able to fix the issue.,OK,6/12,OK,0/8,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL
Yellow-Zebra,yellow,zebra,3,1,2,4,4,4,4,1,3,xox,bookstore,manual,touchcore,420,4789,3707,3060,True,True,Participant starts by an attempt to refactor zoo with touchcore without watching full screencast. Participant gets stuck abandons and retries. Main issue us that participant enters splitview before having finished the resource tree model. Participant tries to create illegal mappings i.e. mappings from rest endpoints to java method parameters. Participant generates java code from before tree or mapping is finished. Participant tests the incomplete generated code with postman. Afterwards they resume with the remaining modeling part. Participant types brackets that visualize dynamic resources by hand which is rejected by TouchCORE as there is a UI option to toggle between static and dynamic resource. Participant at some point accidentally deletes all previously created mappings. They eventually finish the task and even test all endpoints thoroughly with postman including PUT and POST endpoints.,In a first attempt the participant set the task instruction playback speed to 2x. From screen recordings it seems that all provided sources have been cloned into a single project. Participant uses visual studio code although all material refers to IntelliJ. Consequently they skip most parts of the IntelliJ instructions including essential parts such as pom file explanations. Towards end of the video instructions the open a local copy of the illustration zoo with IntelliJ and inspect the source code. The participant seems to catch up with parts of the preliminaries during task solving including installation of required software such as git. They replicate the full manual refactoring task on zoo before working on own task. Likely they did not notice that the actual task was to refactor a different application. They even test their own refactored zoo REST API with Postman. Postman prints sample curl snippets so they try these printed samples. This fails for they do not have curl installed as the participant is working on Windows. They then start an ubuntu VM to use curl and test the zoo api thoroughly. They even test put requests with body payload. They copy parts of the replicated zoo solution for their own task solving  e.g. annotation stubs when working on their own manual refactoring task. They test the refactored outcome very intensely with postman. Some tests are even run while still refactoring the application meaning they only proceed to the next api endpoint after the previous has been tested.,OK,12/12,OK,6/8,PASS,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Yellow-Fox,yellow,fox,4,4,3,1,4,2,5,4,3,xox,bookstore,manual,touchcore,731,1773,2080,1954,True,True,Participant does not finish the instruction video material. They skip the last minute where testing is demoed. They interleave the tree modelling and the mapping process. That is to say they go back and forth between a partially completed resource tree and the mapping splitview. They frequently use the API documentation to read about documentation before mapping endpoints to functions. Presumably to ensure the mapping is correct. The generated code does at first not compile. Possibly because maven dependency to vanilla bookstore was not correctly installed in preliminary task. They first attempt to fix compile error by changing their java version from 16 to 11 which has no effect. Eventually they succeed by first compiling to jar then launching jar rather than direct launch. Not possible to reconstruct the exact issue based on the video recordings and files submitted.,All good. The participant tests the outcome very thoroughly.,OK,12/12,OK,8/8,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Yellow-Unicorn,yellow,unicorn,3,3,3,4,4,4,5,3,3,xox,bookstore,manual,touchcore,736,2123,3180,1794,True,True,Participant does not watch the entire instruction video. They skip the testing illustrations and jump directly to own task solving.,The participant does not finish the task description video to the end and begin their task before the end is reached. They then jump back and forth between task description video  textual task illustration and task solving. Overall the solve the task mainly based on textual instructions. The only part of the video they revise is the last part on service testing. ,OK,12/12,OK,5/8,PASS,FAIL,PASS,PASS,PASS,PASS,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Yellow-Turtle,yellow,turtle,4,2,3,5,4,4,5,3,3,xox,bookstore,manual,touchcore,716,1886,3429,2837,True,True,Participant sets video playback speed to 1.75 accelerated. No major complications while solving task with TouchCORE. Participant struggles at first when testing task outcome. They have troubles typing the correct service root URL for testing GET endpoints with browser. Participant start Postman to test PUT request (which is not mentioned at any point in instruction material). For POST participant at first forgets to provide request body payload. Eventually copies json from existing book entry to add entity to backend. Participant fails again with testing due to a ISBN collision. Eventually they modify ISBN in request to dummy number 1234 and succeed. Overall this participant tested their solution very thoroughly.,The participant accelerates the instruction video to 1.5x speed. They also replicate steps on zoo while video is running in parallel. The seem confused by instructions as they even replicate the troubleshoot instructions although their project shows no errors and is correctly imported. While working on the zoo replication they use git to compare the commit differences between the vanilla sample app and the provided sample zoo solution. They try to encode parameters as url parameters. That is to say with an equals sign stating the resource name. The annotations added are incorrect  for they do not accept gameid is part of URL but as request parameter. Unclear where participant found the code reference for that as this is not part of any instruction material. During tests they are consistent to this deviation for they attempt to provides the gameid parameter likewise as query parameter  ignoring id provided in URL resource locator. Seems like all parameters aver received in backend are using @requestparameter annotation. Unsure why participant codes it like this. Instructions never mention this kind of parameter or annotation. Participant then opens postman to test same get requests but keeps using request parameters.,OK,12/12,OK,2/8,PASS,PASS,FAIL,FAIL,FAIL,FAIL,FAIL,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
Yellow-Koala,yellow,koala,2,1,2,1,4,3,5,4,3,xox,bookstore,manual,touchcore,715,2058,2230,1760,True,True,While in split view this pariticipant accidentally deletes parts of the created solution by crossing already completed mappings. TouchCORE interprets that as a delete command for these mappings. As such the participant loses parts of already finished solution and has to recreate these parts. Participant takes time to read very carefully through interface description after mapping finished.,The participant does not start with video but begins their task solving by reading the provided API docs. Only afterwards they watch excerpts of the screencast. In summary the entire screencast is only covered once. Otherwise they follows instructions the provided instructions thoroughly.,OK,12/12,OK,7/8,PASS,PASS,PASS,PASS,PASS,PASS,FAIL,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS,PASS
